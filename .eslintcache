[{"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\index.js":"1","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\App.js":"2","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\reportWebVitals.js":"3","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Details.jsx":"4","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Home.jsx":"5","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Cake.jsx":"6","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Snack.jsx":"7","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Cart.jsx":"8","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Login.jsx":"9","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Reg.jsx":"10","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Top.jsx":"11","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Bottom.jsx":"12","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\List.jsx":"13","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\context\\index.js":"14","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\utils\\request.js":"15","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\FloorCon.jsx":"16","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Handpick.jsx":"17","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Home\\Banner.jsx":"18","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Home\\Floor.jsx":"19","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Home\\Division.jsx":"20","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\utils\\index.js":"21","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Mine.jsx":"22","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\utils\\auth.js":"23","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\LoginMask.jsx":"24","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Details\\GoodDes.jsx":"25","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Details\\ProSize.jsx":"26","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\CartShow.jsx":"27"},{"size":381,"mtime":1607434352170,"results":"28","hashOfConfig":"29"},{"size":2576,"mtime":1608900915589,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1607331057595,"results":"31","hashOfConfig":"29"},{"size":9043,"mtime":1608900915638,"results":"32","hashOfConfig":"29"},{"size":2113,"mtime":1608900915639,"results":"33","hashOfConfig":"29"},{"size":850,"mtime":1608900915635,"results":"34","hashOfConfig":"29"},{"size":1049,"mtime":1608900915644,"results":"35","hashOfConfig":"29"},{"size":11783,"mtime":1608900915636,"results":"36","hashOfConfig":"29"},{"size":3943,"mtime":1608900915641,"results":"37","hashOfConfig":"29"},{"size":5352,"mtime":1608900915643,"results":"38","hashOfConfig":"29"},{"size":3551,"mtime":1608900915622,"results":"39","hashOfConfig":"29"},{"size":2124,"mtime":1608900915613,"results":"40","hashOfConfig":"29"},{"size":1146,"mtime":1608900915640,"results":"41","hashOfConfig":"29"},{"size":103,"mtime":1607943993770,"results":"42","hashOfConfig":"29"},{"size":1662,"mtime":1608900915633,"results":"43","hashOfConfig":"29"},{"size":2805,"mtime":1608900915618,"results":"44","hashOfConfig":"29"},{"size":4785,"mtime":1607943993768,"results":"45","hashOfConfig":"29"},{"size":1198,"mtime":1608900915619,"results":"46","hashOfConfig":"29"},{"size":1326,"mtime":1607943993769,"results":"47","hashOfConfig":"29"},{"size":548,"mtime":1607943993769,"results":"48","hashOfConfig":"29"},{"size":804,"mtime":1608900915632,"results":"49","hashOfConfig":"29"},{"size":2234,"mtime":1608900915642,"results":"50","hashOfConfig":"29"},{"size":1579,"mtime":1608900915631,"results":"51","hashOfConfig":"29"},{"size":1565,"mtime":1608900915620,"results":"52","hashOfConfig":"29"},{"size":1186,"mtime":1608900915616,"results":"53","hashOfConfig":"29"},{"size":1219,"mtime":1608900915616,"results":"54","hashOfConfig":"29"},{"size":6169,"mtime":1608900915614,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"waxjtz",{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\index.js",[],["127","128"],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\App.js",["129","130","131"],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\reportWebVitals.js",[],["132","133"],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Details.jsx",["134","135","136","137","138"],"import React,{useState,useEffect,useCallback} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {searchFormat} from '../utils';\r\nimport {request} from '../utils/request';\r\n\r\n// 组件\r\nimport Banner from '../component/Home/Banner';\r\nimport ProSize from '../component/Details/ProSize';\r\nimport GoodDes from '../component/Details/GoodDes';\r\nimport { Tabs , Toast } from 'antd-mobile';\r\nimport {getUser} from '../utils/auth';\r\nimport LoginMask from '../component/LoginMask';\r\n\r\n//样式\r\nimport '../css/sass/details.scss';\r\n\r\n// 促销数据\r\nconst promotion = [\r\n    {\"id\":1212,\"type\":7,\"channelStr\":\"\",\"ptype\":2,\"title\":\"买蛋糕可至购物车参加优惠换购\",\"remark\":\"买蛋糕可至购物车参加优惠换购\",\"tag\":\"换购\",\"recommend\":0},{\"id\":1891,\"type\":2,\"channelStr\":\"1035\",\"ptype\":2,\"title\":\"2020年11月会员日\",\"remark\":\"限时限量特价\",\"tag\":\"特价\",\"recommend\":0},{\"id\":1839,\"type\":1,\"channelStr\":\"1112\",\"ptype\":2,\"title\":\"2020年中秋节礼品卡兑换\",\"remark\":\"2020年中秋节礼品卡兑换\",\"tag\":\"立减\",\"recommend\":1},{\"id\":1895,\"type\":2,\"channelStr\":\"336\",\"ptype\":1,\"title\":\"内部员工订单免运费\",\"remark\":\"内部员工订单免运费\",\"tag\":\"免邮\",\"recommend\":0},{\"id\":1874,\"type\":8,\"channelStr\":\"\",\"ptype\":1,\"title\":\"9周年庆\",\"remark\":\"限量赠礼\",\"tag\":\"赠品\",\"recommend\":0}\r\n];\r\n\r\nfunction Details(props){\r\n    const [detailsData,setDetails] = useState(null); //整个详情页数据\r\n    const [bannerData,setBanner] = useState(null); //轮播图数据\r\n    const [currentSku,setSku] = useState(null); \r\n    const [size,setSize] = useState(null);   //当前尺寸\r\n    const [label,setLabel] = useState(null); //小标签\r\n    const [goodDes,setGoodDes] = useState(null); //商品详情\r\n    let [num,setNum] = useState(0);\r\n    const [isMask,showMask] = useState(false);\r\n    const {bcname,id} = searchFormat(props.location.search);\r\n    let user = getUser();\r\n\r\n    const tabs = [\r\n        { title: '商品详情' },\r\n        { title: '商品点评' },\r\n    ];  \r\n\r\n    /* 获取详情页数据 */\r\n    useEffect(async ()=>{\r\n        // console.log(props.location.search);\r\n        const {bcname,id} = searchFormat(props.location.search);\r\n        let res = await request.get('/goods/cakesearch',{\r\n            bcname,\r\n            id:id-0,\r\n        });\r\n        console.log(\"detailsRes=\",res);\r\n        setDetails(res.data[0]);\r\n        // 设置初始sku\r\n        setSku(res.data[0].sku);\r\n        setSize(res.data[0]); //要设置默认显示的规格\r\n    },[]);\r\n    // console.log(\"sizeout=\",size);\r\n\r\n    /* 设置轮播图数据 */\r\n    useEffect(function(){        \r\n        if(detailsData){           \r\n            let newBanner = [];\r\n            detailsData.pic.list.forEach(item=>{\r\n                newBanner.push(detailsData.pic.url+item.m);\r\n            });\r\n            setBanner(newBanner);\r\n            //setBanner是异步的\r\n        }\r\n    },[detailsData]);\r\n\r\n    /* 点击改变可选规格 */\r\n    let changeSku = useCallback((goods)=>{\r\n        console.log(\"goods=\",goods);\r\n        setSku(goods.sku);\r\n        setSize(goods);\r\n    },[currentSku]);\r\n    \r\n    /* 不变的部分数据 */\r\n    //小标签\r\n    useEffect(()=>{\r\n        console.log(\"detailsData=\",detailsData);\r\n        if(detailsData){\r\n            detailsData.fname && setLabel(detailsData.fname.split(','));\r\n        }\r\n    },[detailsData]);\r\n    // console.log(\"detailsData=\",detailsData);\r\n\r\n    /* 商品详情 */\r\n    useEffect(()=>{\r\n        let goodDesData = [];\r\n        if(detailsData){\r\n            goodDesData.push(detailsData.basic.list);\r\n            goodDesData.push(detailsData.mater);\r\n            goodDesData.push(detailsData.details);\r\n            setGoodDes(goodDesData);\r\n        }\r\n    },[detailsData]);\r\n\r\n    /* 加入购物车 */\r\n    const addCar = useCallback(async ()=>{\r\n        // console.log(\"currentSku=\",currentSku);\r\n        // console.log(\"size=\",size);\r\n        // console.log(\"bcname=\",bcname);\r\n        // console.log(\"user=\",getUser());\r\n        if(!user){\r\n            showMask(true);\r\n        }else{\r\n            let res = await request.put('/cart/push/'+getUser(),{\r\n                id,\r\n                checkid:size.id,\r\n                bcname,\r\n                num,\r\n            });\r\n            if(res.code === 200){\r\n                // console.log(\"addcarRes=\",res);\r\n                Toast.info('加入购物车成功',2);\r\n            }\r\n        }\r\n    },[size,setNum]);\r\n\r\n    const nowBuy = useCallback(async ()=>{\r\n        // console.log(\"currentSku=\",currentSku);\r\n        // console.log(\"size=\",size);\r\n        // console.log(\"bcname=\",bcname);\r\n        // console.log(\"user=\",getUser());\r\n        console.log(\"num1=\",num);\r\n        // setTimeout(async ()=>{\r\n            let res = await request.put('/cart/push/'+getUser(),{\r\n                id,\r\n                checkid:size.id,\r\n                bcname,\r\n                num,\r\n            });\r\n            if(res.code === 200){\r\n                console.log(\"nowBuy=\",res);\r\n                Toast.info('加入购物车成功',2);\r\n                props.history.push('/cart');\r\n            }\r\n        // },2000)\r\n    },[size,setNum]);\r\n    return (\r\n        <div className=\"details-box\">\r\n            {/* 轮播图 */}\r\n            <Banner bannerData={bannerData} auto={true}/>\r\n            {/* 可选规格 */}\r\n            <div className=\"details-main\">\r\n                {\r\n                    (detailsData&&detailsData.list.length>1)?\r\n                    <ul className=\"pro-tab\">\r\n                        {\r\n                            detailsData.list.map(item=>(\r\n                                <li key={item.id}\r\n                            className={item.sku===currentSku?'activeWeight':''}\r\n                            onClick={changeSku.bind(null,item)}\r\n                            >\r\n                                    <p>{item.spec}</p>\r\n                                    <p>({item.weight})</p>\r\n                                    <span>{item.edible}</span>\r\n                            </li>\r\n                            ))\r\n                        }\r\n                    </ul>:<React.Fragment></React.Fragment>\r\n                }\r\n                <ProSize sizeData={size}/>\r\n\r\n                {/* 不变的部分 */}\r\n                <div className=\"noChange\">\r\n                    {label?<div className=\"good-label floor\">\r\n                    <i className=\"iconfont icon-biaoqian-copy \"></i>\r\n                        {label.map((item,index)=>(\r\n                            <span key={index}>{item}</span>\r\n                        ))}\r\n\r\n                    </div>:''}\r\n                    \r\n                    <div className=\"tips floor\">\r\n                        <span>!</span>若不及时食用，请放置0-10℃冷藏\r\n                    </div>\r\n                    {detailsData? <div className=\"describe\">\r\n                        <p>{detailsData.brief}</p>\r\n                        <p>{detailsData.frenchBrief}</p>\r\n                    </div>:\"\"}\r\n                \r\n                    <div className=\"promotion floor\">\r\n                    <span>促销</span>\r\n                    <ul>\r\n                        {\r\n                            promotion.map(item=>(\r\n                                <li key={item.id}>\r\n                                    <i>{item.tag}</i>\r\n                                 {item.title}</li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                    <span>详情 &gt;</span>\r\n                </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* 商品详情和商品点评 */}\r\n            <div className=\"desAndCom\">\r\n                <Tabs tabs={tabs} initialPage={0} animated={false} useOnPan={false}\r\n                tabBarInactiveTextColor=\"#8d8d8d\"\r\n                tabBarActiveTextColor=\"#000\"\r\n                tabBarUnderlineStyle={{borderColor:\"#ffe32a\"}}\r\n                >\r\n                    <div className=\"des-item goods-des\">\r\n                        {/* 商品详情组件 */}\r\n                        <GoodDes data={goodDes}/>\r\n                    </div>\r\n                    <div className=\"des-item goods-com\">\r\n                        {/* 商品评论 */}\r\n                    </div>\r\n                </Tabs>\r\n            </div>\r\n            {/* 加入购物车和立即购买按钮 */}\r\n            <div className=\"operate-box\">\r\n                <div className='details-operate'>\r\n                    <span onClick={()=>{\r\n                        setNum(num++);\r\n                        addCar();\r\n                    }}>加入购物车</span>\r\n                    <span onClick={()=>{\r\n                        setNum(num++);\r\n                        nowBuy();\r\n                    }}>立即购买</span>\r\n                </div>\r\n            </div>\r\n            {\r\n                isMask?<LoginMask isMask={isMask} showMask={showMask}/>:''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Details);","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Home.jsx",[],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Cake.jsx",["139","140"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport request from '../utils/request';\r\nimport '../css/sass/list.scss';\r\nimport FloorCon from '../component/FloorCon';\r\nimport MyContext from '../context';\r\n\r\nfunction Cake(){\r\n    const [cakeData,changeCake] = useState([]);\r\n\r\n    const {page,changeIsok} = useContext(MyContext);\r\n\r\n    useEffect(async function(){\r\n        let res = await request.get('/goods/cakelist',{\r\n            page,\r\n            pageSize:6\r\n        });\r\n        if(res.flag){\r\n            // console.log(\"cakeData=\",res);\r\n            changeCake([...cakeData,...res.data]);\r\n            changeIsok(true);\r\n        }\r\n    },[page]);\r\n    return (\r\n        <div className=\"cake-box\">\r\n            {\r\n                <FloorCon conData = {cakeData}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cake;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Snack.jsx",["141","142"],"import React,{useState,useEffect,useContext} from 'react';\r\nimport request from '../utils/request';\r\nimport '../css/sass/list.scss';\r\nimport FloorCon from '../component/FloorCon';\r\nimport MyContext from '../context';\r\n\r\nfunction Cake(){\r\n    const [snackData,changeSnack] = useState([]);\r\n\r\n    const [loading,isLoading] = useState(false);\r\n    const {page,changeIsok} = useContext(MyContext);\r\n    useEffect(async function(){\r\n        isLoading(true);\r\n        let res = await request.get('/goods/snacklist',{\r\n            page,\r\n            pageSize:6\r\n        })\r\n        // console.log(\"snackData=\",res);\r\n        // if(res.flag){\r\n            isLoading(false);\r\n            changeIsok(true);\r\n            changeSnack([...snackData,...res.data]);\r\n        // }\r\n    },[page]);\r\n    return (\r\n        <div className=\"cake-box\">\r\n            {\r\n                <FloorCon conData = {snackData}/>\r\n            }\r\n            <div className='loading' style={{display:loading?'block':'none'}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cake;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Cart.jsx",["143","144","145","146","147","148","149","150"],"import React from 'react';\r\n\r\nfunction Cart(){\r\n    return (\r\n        <div>Cart</div>\r\n    )\r\n}\r\n\r\nexport default Cart;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Login.jsx",["151","152"],"import React, { useEffect, useState ,useCallback} from 'react';\r\nimport '../css/sass/login.scss';\r\nimport request from '../utils/request';\r\n\r\nimport { Toast } from 'antd-mobile';\r\nimport {setToken,setUser} from '../utils/auth';\r\nimport {searchFormat} from '../utils';\r\n\r\nimport CryptoJS from 'crypto-js';\r\n\r\nfunction Login(props){\r\n    const [svgCode,setSvg] = useState('');\r\n    const [name,setName] = useState(props.location.state?props.location.state.name:'');\r\n    const [psw,setPsw] = useState('');\r\n    const [code,setCode] = useState(false);\r\n\r\n    //图片验证码\r\n    useEffect(()=>{\r\n        request.get('/users/vcode').then((res)=>{\r\n            setSvg(res.data);\r\n        })\r\n    },[]);\r\n    const changeSvg = useCallback(()=>{\r\n        request.get('/users/vcode').then((res)=>{\r\n            setSvg(res.data);\r\n        })\r\n    },[svgCode]);\r\n\r\n    //图片验证码验证\r\n    const checkCode = useCallback(async (val)=>{\r\n        let res = await request.post('/users/checkcode',{\r\n            vcode:val\r\n        });\r\n        setCode(res.flag);\r\n    },[]);\r\n    const goto = (path) =>{\r\n        //拼接页面来源,注册好账号登录成功后可以回到来的界面\r\n        props.history.push(path + props.location.search);\r\n    }\r\n\r\n    const checkItem = useCallback(()=>{\r\n        // console.log(\"name=\",name);\r\n        // console.log(\"psw=\",psw);\r\n        // console.log(\"code=\",code);\r\n        if(code){\r\n            request.get('/users/login',{username:name,password:psw}).then((res)=>{\r\n            if(!res.flag){\r\n                Toast.info('用户名或密码不正确');\r\n            }else{ //登录成功\r\n                setToken(res.token);\r\n                setUser(res.username);\r\n                const {source} = searchFormat(props.location.search);\r\n                props.history.push('/'+source)\r\n            }\r\n            })\r\n        }else{\r\n            Toast.info('图片验证码不正确');\r\n        }\r\n        \r\n    },[name,psw,code])\r\n\r\n    return (\r\n        <div className=\"login-box\">\r\n            <h2>账号密码登录</h2>\r\n            <div className='login-ipt'>\r\n                <i className=\"iconfont icon-shouji-copy\"></i>\r\n                <input type=\"text\" placeholder=\"用户名/手机\"\r\n                value={name}\r\n                onChange={(e)=>{\r\n                    setName(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n            <div className=\"login-ipt ipt-code\">\r\n                <i className=\"iconfont icon-gezi-copy\"></i>\r\n                <input type=\"text\" placeholder=\"图片验证码\"\r\n                onChange={(e)=>checkCode.call(null,e.currentTarget.value)}/>\r\n                {\r\n                    svgCode?\r\n                    (()=>{\r\n                        return  <div className=\"img-code\"\r\n                        dangerouslySetInnerHTML={{__html:svgCode}}\r\n                        onClick={changeSvg}>\r\n                        </div>\r\n                    })():''\r\n                }\r\n               \r\n            </div>\r\n            <div className='login-ipt'>\r\n                <i className=\"iconfont icon-suo-copy\"></i>\r\n                <input type=\"password\" placeholder=\"密码\"\r\n                onChange={(e)=>{\r\n                    const password = CryptoJS.SHA256(e.currentTarget.value).toString() ; \r\n                    setPsw(password);\r\n                }}/>\r\n            </div>\r\n            <div className='now-reg'>\r\n                <span onClick={goto.bind(null,'/reg')}>立即注册</span>   \r\n            </div>\r\n\r\n            <div className=\"other-way\">\r\n                <p>其他登录方式</p>\r\n                <p><i className=\"iconfont icon-zhifubao\"></i>\r\n                {/* <img src={weibo}></img> */}\r\n                <i className=\"iconfont icon-weibo-copy\"></i></p>\r\n                \r\n            </div >\r\n            <button onClick={checkItem}>立即登录</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Reg.jsx",["153","154","155"],"import React, { useEffect, useState ,useCallback}  from 'react';\r\n\r\nimport '../css/sass/reg.scss';\r\nimport request from '../utils/request';\r\nimport CryptoJS from 'crypto-js';\r\nimport { Toast } from 'antd-mobile';\r\n\r\nfunction Reg(props){\r\n    const [tel,setTel] = useState('');\r\n    const [name,setName] = useState('');\r\n    const [psw,setPsw] = useState('');\r\n    const [shaPsw,setShaPsw] = useState('');\r\n    const [againPsw,setAgainPsw] = useState('');  \r\n    const [agree,setAgree] = useState(true); \r\n    //提示\r\n    const [pswRes,changePswRes]=useState(false);\r\n    const [nameRes,changeNameRes]=useState(false);    \r\n\r\n    const regName = /^[\\da-zA-Z_\\u4e00-\\u9fa5]{6,14}$/;\r\n    const regTel = /^[1]([3-9])[0-9]{9}$/;\r\n    const regPsw= /^[A-Za-z\\d.!%*#?]{6,18}$/;\r\n    const length = name.replace(/[\\u4e00-\\u9fa5]/g,\"aaa\");//一个汉字表示三个字符\r\n\r\n    //用户名正则验证\r\n    useEffect(()=>{\r\n        //为空的时候不验证\r\n        if(!name){\r\n            changeNameRes(false);\r\n        }else{\r\n            changeNameRes(regName.test(length));\r\n        }\r\n    },[name]);\r\n    /* const iptName = useCallback((nameVal)=>{\r\n        setName(nameVal);\r\n        if(!name){\r\n            console.log(111);\r\n            changeNameRes(false);\r\n        }else{\r\n            changeNameRes(regName.test(length));\r\n        }\r\n    },[name]) */\r\n    //密码正则验证\r\n    useEffect(()=>{\r\n        psw?\r\n        changePswRes(regPsw.test(psw))\r\n        :changePswRes(false);\r\n    },[psw]);\r\n    \r\n    //点击立即注册的时候验证正则，再发请求\r\n    const nowReg = useCallback(async ()=>{\r\n        // console.log(\"againPsw=\",againPsw);\r\n        // console.log(\"name=\",name);\r\n        // console.log(\"psw=\",psw);\r\n        // console.log(\"agree=\",agree);\r\n        // console.log(\"tel=\",tel);\r\n        if(!regName.test(length)){\r\n            Toast.info('请输入7-14个字符的用户名（中文占三个字符）',1)\r\n        }else if(!regTel.test(tel)){\r\n            Toast.info('请输入正确的手机号',1);\r\n        }else if(!regPsw.test(psw)){\r\n            Toast.info('请输入6-18个字符的密码',1);\r\n        }else if(shaPsw !== againPsw){\r\n            Toast.info('两次输入的密码不一致',1);\r\n        }else if(!agree){\r\n            Toast.info('请阅读并同意《MCAKE购物协议》',1)\r\n        }else{\r\n            //通过验证，发送请求\r\n            let result = await request.post('/users/reg',{\r\n                username:name,\r\n                tel,\r\n                password:shaPsw,\r\n            });\r\n            if(result.flag){\r\n                props.history.replace({\r\n                    pathname:'/login',\r\n                    search:props.location.search,\r\n                    state:{\r\n                        name\r\n                    }\r\n                })\r\n                return\r\n            }else{\r\n                Toast('注册失败，请重新尝试',1)\r\n            }\r\n        }\r\n    },[name,psw,tel,againPsw,agree]);\r\n\r\n    return (\r\n        <div className='reg-box'>\r\n            <div className='reg-ipt'>\r\n                <i className=\"iconfont icon-gezi-copy\"></i>\r\n                <input type=\"text\" value={name} placeholder=\"用户名\"\r\n                onChange={(e)=>{\r\n                    /* iptName.call(null,e.currentTarget.value); */\r\n                    setName(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n            {nameRes?'':<span>请输入6-14个字符的用户名（中文占两个字符）</span>}\r\n            \r\n            <div className='reg-ipt'>\r\n                <i className=\"iconfont icon-shouji-copy\"></i>\r\n                <input value={tel} type=\"text\" placeholder=\"手机号码\" \r\n                onChange={(e)=>{\r\n                    setTel(e.currentTarget.value);\r\n                }} />\r\n            </div>\r\n\r\n            <div className='reg-ipt'>\r\n                <i className=\"iconfont icon-suo-copy\"></i>\r\n                <input value={psw} type=\"password\"  placeholder=\"密码\" \r\n                onChange={(e)=>{\r\n                    setPsw(e.currentTarget.value);\r\n                    const password = CryptoJS.SHA256(e.currentTarget.value).toString(); \r\n                    setShaPsw(password);\r\n                }}/>\r\n            </div>\r\n            {pswRes?'':<span>请输入6-18个字符的密码</span>}\r\n            \r\n            <div className='reg-ipt'>\r\n                <i className=\"iconfont icon-suo-copy\"></i>\r\n                <input type=\"password\" placeholder=\"密码确认\" onChange={(e)=>{\r\n                    const secondPsw = CryptoJS.SHA256(e.currentTarget.value).toString();\r\n                    setAgainPsw(secondPsw);\r\n                }}/>\r\n            </div>\r\n            <div className='reg-agree'>\r\n                <input type='checkbox' defaultChecked={agree} id=\"agree\"/>\r\n                <label htmlFor='agree' \r\n                onClick={\r\n                    ()=>{setAgree(!agree)\r\n                }}></label>\r\n                <span>同意《MCAKE购物协议》</span>\r\n            </div>\r\n            <p className='gologin'>\r\n                <span onClick={()=>{props.history.push('/login')}}>已有账号，立即登录</span>\r\n            </p>\r\n            \r\n            <button onClick={nowReg}>立即注册</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reg;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Top.jsx",["156","157","158","159"],"import React,{useState} from 'react';\r\nimport '../css/sass/common.scss';\r\n//图片\r\nimport logo from '../assets/images/logo.png';\r\nimport back from '../assets/images/zuo.png';\r\nimport  dangao from '../assets/images/Mine/dangao.png';\r\nimport  dizhi from '../assets/images/Mine/dizhi.png';\r\nimport  guanyu from '../assets/images/Mine/guanyu.png';\r\nimport  wode from '../assets/images/Mine/wode.png';\r\nimport cart from '../assets/images/Mine/cart.png';\r\n\r\nfunction Top(props){\r\n    const {location,history} = props.props;\r\n    // console.log(\"top=\",location.pathname.slice(1));\r\n    const [subNav,changeSub] = useState(false);\r\n\r\n    const goto = function(path){\r\n        changeSub(false);\r\n        history.push({\r\n            pathname:path,\r\n            search:'?source='+location.pathname.slice(1)\r\n        })\r\n        // history.push(path);\r\n    }\r\n    return (\r\n        <div className=\"header-box\">\r\n            <div className=\"fix-box\">\r\n            <ul className=\"header clearfix\">\r\n                <li>\r\n                    {\r\n                        (location.pathname === '/cart' || location.pathname.includes('/details') || location.pathname === '/login' || location.pathname === '/reg' || location.pathname === '/mine')?\r\n                        <p className=\"goback\">\r\n                        <img src={back} alt=\"\"/>\r\n                        </p>\r\n                        :<p className=\"address\">\r\n                        <i className=\"iconfont icon-weizhi\"></i>\r\n                        <span>北京市</span>\r\n                        </p>\r\n                    }\r\n                    \r\n                </li>\r\n                <li  onClick={()=>props.props.history.push('/home')}>\r\n                   <img src={logo} alt=\"\"/> \r\n                </li>\r\n                <li className=\"search\">\r\n                    {\r\n                        (location.pathname === '/cart' || location.pathname.includes('/details') || location.pathname === '/login' || location.pathname === '/reg' || location.pathname === '/mine' )?<p className=\"goback\">\r\n                        <img src={cart} alt=\"\"\r\n                        onClick={goto.bind(null,'/cart')}/>\r\n                        </p>\r\n                        :<i className=\"iconfont icon-sousuo\"></i>\r\n                    }\r\n                    \r\n                </li>\r\n                <li onClick={()=>changeSub(!subNav)}>\r\n                    <i className=\"iconfont icon-caidan\"></i>\r\n                </li>\r\n            </ul>\r\n            <div className=\"sub-nav\" style={{display:subNav?\"block\":\"none\"}}\r\n            onClick={(e)=>{\r\n                if(e.target.className === \"sub-nav\"){\r\n                    changeSub(false);\r\n                }\r\n            }}>\r\n            <ul>\r\n                <li><img src={dangao}></img><span>最新活动</span></li>\r\n                <li><img src={wode} onClick={goto.bind(null,'/mine')}></img><span>个人中心</span></li>\r\n                <li><img src={guanyu}></img><span>关于我们</span></li>\r\n                <li><img src={dizhi}></img><span>配送范围</span></li>\r\n            </ul>\r\n            </div>\r\n            {\r\n                <img src=\"https://h5.mcake.com/static/images/chirs_2020/snow-1.png\" alt=\"\" className=\"chirms\" style={{display:(location.pathname === '/cart' || location.pathname.includes('/details') || location.pathname === '/login' || location.pathname === '/reg' || location.pathname === '/mine')?\"none\":'block',zIndex:2}}/>\r\n                \r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Top;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Bottom.jsx",[],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\List.jsx",["160"],"import React,{useState,useEffect} from 'react';\r\nimport {searchFormat} from '../utils';\r\nimport request from '../utils/request';\r\n\r\nimport FloorCon from '../component/FloorCon';\r\n\r\nimport '../css/sass/list.scss';\r\n\r\nfunction List(props){\r\n    const [listData,changeCake] = useState([]);\r\n    console.log(\"listprops=\",searchFormat(props.location.search));\r\n    const {name,fid} = searchFormat(props.location.search);\r\n\r\n    useEffect(async function(){\r\n        let res;\r\n        // console.log(\"listfid=\",fid);\r\n        // console.log(\"listname=\",name);\r\n        if(fid){\r\n            res = await request.get('/goods/regfind/',{fid});\r\n        }else{\r\n            if(name === 'parts'){\r\n                res = await request.get('/goods/partslist');\r\n            }else{\r\n                res = await request.get('/goods/regfind/',{\r\n                    fname:name,\r\n                });\r\n            }\r\n        }\r\n        changeCake(res);\r\n    },[name,fid]);\r\n    \r\n    return (\r\n        <div className=\"cake-box\">\r\n            {\r\n                <FloorCon conData = {listData.data}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default List;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\context\\index.js",[],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\utils\\request.js",[],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\FloorCon.jsx",["161"],"import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport '../css/sass/list.scss';\r\nimport cartIcon from '../assets/images/cart-icon.png';\r\n\r\nfunction FloorCon(props){\r\n    const {conData} = props;\r\n    // console.log(conData);\r\n    return (\r\n        <div>\r\n            <ul className=\"floorCon\">\r\n                {\r\n                    conData?\r\n                    conData.map(goods=>(\r\n                        <li className=\"conProduct\" key={goods.id}>\r\n                            <div className=\"conImg\">\r\n                                <img  onClick={(e)=>{\r\n                                e.stopPropagation()\r\n                                if(goods.bcname==='周边商品'){\r\n                                    props.history.push('/details?'+props.location.pathname+'&snack&'+goods.id)\r\n                                }else if(goods.bcname==='蛋糕'){\r\n                                    props.history.push('/details?'+props.location.pathname+'&cake&'+goods.id)\r\n                                }\r\n                            }} src={goods.img} alt=\"\"/></div>\r\n                            <b>{goods.name}</b>\r\n                            <p>{goods.french}</p>\r\n                            <span>￥{goods.price}</span>\r\n                            <i className=\"cartIcon\" >\r\n                                <img src={cartIcon} alt=\"\"/>\r\n                            </i>\r\n                        </li>\r\n                    )):\r\n                    <React.Fragment></React.Fragment>\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nFloorCon = withRouter(FloorCon);\r\nexport default FloorCon;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Handpick.jsx",["162","163","164"],"import React ,{useState,useEffect,useRef,useCallback} from \"react\";\r\nimport '../css/sass/common.scss';\r\nimport {withRouter} from 'react-router-dom';\r\n//图片\r\nimport sjt from '../assets/images/sjt.png';\r\nimport yjt from '../assets/images/yjt.png';\r\nfunction Handpick(props){\r\n    //遮罩层左边慢慢出来的效果\r\n    const {showHand,changeShow} = props;\r\n    const myel = useRef(null);\r\n    useEffect(function(){\r\n        if(showHand){\r\n            myel.current.style.left = 0;\r\n        }else{\r\n            myel.current.style.left = '-51%';\r\n        }\r\n    },[showHand]);\r\n\r\n    //口味筛选和场景筛选的二级菜单\r\n    const [tasteList,changeTaste] = useState(\r\n        [{name:'拿破仑',icon:'elf_01'},{name:'奶油',icon:'elf_02'},{name:'慕斯',icon:'elf_03'},{name:'芝士',icon:'elf_04'},{name:'巧克力',icon:'elf_05'},{name:'咖啡',icon:'elf_06'},{name:'坚果',icon:'elf_07'},{name:'水果',icon:'elf_08'},{name:'冰淇淋',icon:'elf_09'}]\r\n    );\r\n    const [sceneList,changeScene] = useState(\r\n        [{name:'生日',icon:'iconfont icon-shengri',fid:34},{name:'聚会',icon:'iconfont icon-qingdianhejuhui-',fid:35},{name:'情侣',icon:'iconfont icon-xin',fid:36},{name:'儿童',icon:'iconfont icon-ertong',fid:37},{name:'长辈',icon:'iconfont icon-changbei',fid:38},{name:'下午茶',icon:'iconfont icon-icon-test',fid:39}]\r\n    );\r\n\r\n    const [showTaste,changeShowT] = useState(false);\r\n    const [showScene,changeShowS] = useState(false);\r\n\r\n    const sjtRef1 = useRef(null);\r\n    const sjtRef2 = useRef(null);\r\n\r\n    let FunShowT = useCallback(function(e){\r\n        e = e || window.event;\r\n        changeShowT(!showTaste);\r\n        if(!showTaste){\r\n            sjtRef1.current.style.transform = 'rotate(180deg)';\r\n        }else{\r\n            sjtRef1.current.style.transform = 'none';\r\n        }\r\n    },[showTaste]);\r\n\r\n    let FunShowS = useCallback(function(e){\r\n        e = e || window.event;\r\n        changeShowS(!showScene);\r\n        if(!showScene){\r\n            sjtRef2.current.style.transform = 'rotate(180deg)';\r\n        }else{\r\n            sjtRef2.current.style.transform = 'rotate(0)';\r\n        }\r\n    },[showScene]);\r\n\r\n    //点击跳转其他页面\r\n    const goto = (path) =>{\r\n        props.history.replace(path);\r\n        changeShow(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"handpick-box\" ref={myel}>\r\n            <div className=\"handpink-con\">\r\n                <div className=\"con-one\"\r\n                onClick={goto.bind(null,'/cake')}>\r\n                    <span>所有蛋糕</span>\r\n                    <i className=\"num\">32</i>\r\n                </div>\r\n                <div className=\"con-one\"\r\n                onClick={FunShowT}>\r\n                    <span>口味筛选</span>\r\n                    <img src={sjt} alt=\"\" ref={sjtRef1}/>\r\n                </div>\r\n                {\r\n                    showTaste?\r\n                    <ul className=\"con-two clearfix\">\r\n                    {tasteList.map(item=>(\r\n                        <li key={item.name}\r\n                        onClick={goto.bind(null,'/list/?name='+item.name)}>\r\n                            <i id=\"tastei\" className={item.icon}></i>\r\n                            <span>{item.name}</span>\r\n                            <img src={yjt} alt=\"\"/>\r\n                        </li>\r\n                    ))}\r\n                    </ul>\r\n                    :<React.Fragment></React.Fragment>\r\n                }\r\n                <div className=\"con-one\"\r\n                onClick={FunShowS}>\r\n                    <span>场景筛选</span>\r\n                    <img src={sjt} alt=\"\"  ref={sjtRef2}/>\r\n                </div>\r\n                {\r\n                    <ul  className=\"con-two clearfix\" style={{display:showScene?'block':'none'}}>\r\n                        {sceneList.map(item=>(\r\n                            <li key={item.name} \r\n                            onClick={goto.bind(null,'/list/?fid='+item.fid)}>\r\n                            <i className={item.icon}></i>\r\n                            <span>{item.name}</span>\r\n                            <img src={yjt} alt=\"\"/>\r\n                        </li>\r\n                        ))\r\n                        }\r\n                    </ul>\r\n                }\r\n                <div className=\"con-one\"\r\n                onClick={goto.bind(null,'/snack')}>\r\n                    <span>所有小食</span>\r\n                    <i className=\"num\">9</i>\r\n                </div>\r\n                <div className=\"con-one\"\r\n                onClick={goto.bind(null,'/list/?name=parts')}>\r\n                    <span>所有配件</span>\r\n                    <i className=\"num\">4</i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nHandpick = withRouter(Handpick);\r\nexport default Handpick;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Home\\Banner.jsx",[],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Home\\Floor.jsx",["165"],"import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport titleImg from '../../assets/images/Home/icon_cj.png';\r\nimport \"../../css/sass/list.scss\";\r\nimport FloorCon from '../FloorCon';\r\n\r\nfunction Floor(props){\r\n    // console.log(\"floorprops=\",props.data);\r\n    return (\r\n        <div className=\"floor-box\">\r\n            {\r\n                props.data.map(item=>(\r\n                    <div className=\"floor\" key={item.id}>\r\n                        <div className=\"title\">\r\n                            <img src={titleImg} alt=\"\"/>\r\n                            <div className=\"titleCon\">\r\n                                <p className=\"cname\">{item.title}</p>\r\n                                <p className=\"ename\">{item.info}</p>\r\n                            </div>\r\n                            <div className=\"titleAlias\">\r\n                                {item.alias}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bigImg\">\r\n                            <img src={item.source.adsense[0].img} alt=\"\"/>\r\n                        </div>\r\n                        <FloorCon conData = {item.source.goods}/>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nFloor = withRouter(Floor);\r\nexport default Floor;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Home\\Division.jsx",[],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\utils\\index.js",[],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\view\\Mine.jsx",[],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\utils\\auth.js",["166"],"//封装cookie的方法\r\nlet tokenkey = 'mcake-user-token';\r\nlet userkey = 'mcake-user';\r\n\r\nfunction setCookie(key, value, iDay) {\r\n    //key:键名   value：键值    iDay：失效时间\r\n    //document.cookie = 'name=malin;expires=20190527;path=/';\r\n    var now = new Date();\r\n    now.setDate(now.getDate() + iDay); //iDay:5天后失效， -1：立即失效\r\n    if (iDay) {\r\n        document.cookie = key + '=' + value + ';expires=' + now + ';path=/';\r\n    } else {\r\n        document.cookie = key + '=' + value + ';path=/';\r\n    }\r\n}\r\n\r\nfunction getCookie(key) {\r\n    //获取cookie值\r\n    var str = document.cookie;//name=malin; psw=123456\r\n    var arr = str.split('; '); //[name=malin,psw=123456]\r\n    for (var ele of arr) {\r\n        var arr2 = ele.split('='); //[name,malin]\r\n        if (key == arr2[0]) {\r\n            return arr2[1];\r\n        }\r\n    }\r\n}\r\n\r\nfunction removeCookie(key) {\r\n    //删除cookie。把这个值变成失效\r\n    setCookie(key, '', -1); //设置成过去的时间\r\n}\r\n\r\n//设置token\r\nexport function setToken(value, days) {\r\n    //value:传入的token值;days:保留的天数\r\n    setCookie(tokenkey, value, days);\r\n}\r\n\r\n//设置用户名\r\nexport function setUser(value, days) {\r\n    //value:传入的用户信息;days:保留的天数\r\n    setCookie(userkey, value, days);\r\n}\r\n\r\n//获取token\r\nexport function getToken() {\r\n    return getCookie(tokenkey);\r\n}\r\n\r\n//获取用户名\r\nexport function getUser() {\r\n    return getCookie(userkey);\r\n}\r\n\r\n//退出\r\nexport function logOut() {\r\n    removeCookie(tokenkey);\r\n    removeCookie(userkey);\r\n}","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\LoginMask.jsx",["167","168"],"import React,{useCallback, useEffect,useRef} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {searchFormat} from '../utils';\r\nimport '../css/sass/loginMask.scss';\r\n\r\nfunction LoginMask(props){\r\n    const {isMask,showMask,history,location} = props;\r\n\r\n    const myRef = useRef(null);\r\n    useEffect(()=>{\r\n        if(isMask){\r\n            myRef.current.style.transform = \"scale(1)\";\r\n        }else{\r\n            myRef.current.style.transform = \"scale(0)\";\r\n        }\r\n    },[isMask]);\r\n\r\n    const cancelLogin = useCallback(()=>{\r\n        //取消登录，跳回来时的界面\r\n        const {source} = searchFormat(location.search);\r\n        \r\n        if(!source){\r\n            history.push(location.pathname+'');\r\n        }else{\r\n            history.push('/'+source);\r\n        }\r\n        showMask(false);\r\n    },[]);\r\n\r\n    const nowLogin = useCallback(()=>{\r\n        history.push({\r\n            pathname:'/login',\r\n            search:'?source='+location.pathname.slice(1)\r\n        });\r\n        showMask(false);\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"login-mask\">\r\n            <div className=\"mask-con\" ref={myRef}>\r\n                <h4>温馨提示</h4>\r\n                <p className='mask-ti'>您需要先登录才能继续您的操作</p>\r\n                <p className='mask-btn'>\r\n                    <span onClick={cancelLogin}>以后再说</span>\r\n                    <span onClick={nowLogin}>立即登录</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginMask);","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Details\\GoodDes.jsx",["169"],"import React from 'react';\r\n\r\nfunction GoodDes(props){\r\n    const {data} = props;\r\n    return (\r\n        <div>\r\n            {\r\n                data?\r\n                <React.Fragment>\r\n                    <div className='taste'>\r\n                    {data[0].map(item=>(<p key={item.gid}>\r\n                        <span>{`${item.french} ${item.name}`}</span>\r\n                        <span>{item.value}</span>\r\n                    </p>))}\r\n\r\n                    </div>\r\n                    <div className='country'>\r\n                    {\r\n                    data[1].list.map((item,index)=>(\r\n                        <span key={index}>\r\n                            <img src={`${data[1].url}${item.img}`} />\r\n                            {item.name}</span>\r\n                    ))}\r\n                        \r\n                    </div>\r\n                    \r\n                    {\r\n                    (()=>{\r\n                        return <div className=\"datail-img\" dangerouslySetInnerHTML={{ __html:data[2]}}></div>\r\n                    })()\r\n                    }\r\n                </React.Fragment>:''\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoodDes;","D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\Details\\ProSize.jsx",[],"D:\\h508\\gofight\\Mcake-React\\mcake\\src\\component\\CartShow.jsx",["170"],"import React,{useState,useCallback,useEffect,useRef} from 'react';\r\n\r\nimport '../css/sass/cartShow.scss';\r\nimport request from '../utils/request';\r\nimport {Toast} from 'antd-mobile';\r\nimport {getUser} from '../utils/auth';\r\n\r\nfunction CartMask(props){\r\n    const {showData,isShow,changeShow,showLogin} = props;\r\n    //默认数据的index\r\n    let defaultIdx = 0;\r\n    let defaultGuige = '';\r\n    //设置默认的index和规格\r\n    // const curList = {};\r\n    showData.list.forEach((item,index)=>{\r\n        if(item.id === showData.id){\r\n            defaultIdx = index;\r\n            // curList = item;\r\n            //默认的规格\r\n            defaultGuige = `${item.spec} (${item.weight}) -${item.edible}`;\r\n        }\r\n    });\r\n    \r\n    //选择重量的下拉菜单\r\n    const [weightMenu,changeMenu] = useState(false);\r\n    //数量\r\n    const [qty,changeQty] = useState(1);\r\n    //当前的规格\r\n    const [currentweight,changeWeight] = useState(defaultGuige);\r\n    //当前选择的数据\r\n    // const [currentList,changeList] = useState(curList);\r\n    //当前的下标\r\n    const [currentIdx,changeIdx] = useState(defaultIdx);\r\n\r\n    //获取遮罩层内容区域元素做动画效果\r\n    const myref = useRef(null);\r\n    useEffect(()=>{\r\n        if(isShow){\r\n            myref.current.style.top = '200px';\r\n        }else{\r\n            myref.current.style.top = 0;\r\n        }\r\n    })\r\n    console.log(\"showData=\",showData);\r\n    \r\n    //在下拉列表选择不同的重量\r\n    const changeWeightFn = useCallback((guige,idx)=>{\r\n        // changeList(guige);\r\n        let currentGuige = `${guige.spec} (${guige.weight}) -${guige.edible}`;\r\n        changeWeight(currentGuige);\r\n        changeIdx(idx);\r\n        changeMenu(false);\r\n    },[currentIdx]);\r\n\r\n    const sureAddCar = async () => {\r\n        console.log(\"qty=\",qty);\r\n        console.log(\"currentIdx\",currentIdx);\r\n        const username = getUser();\r\n        console.log(\"username=\",username);\r\n        if(username){\r\n            showLogin(false);\r\n            let bcname = '';\r\n            if(showData.bcname === '蛋糕'){\r\n                bcname = 'cake';\r\n            }else if(showData.bcname === '商品配件'){\r\n                bcname = 'parts';\r\n            }else if(showData.bcname === '周边商品'){\r\n                bcname = 'snack';\r\n            };\r\n            let res = await request.put('/cart/push/'+username,{\r\n                id:showData.id,\r\n                checkid:showData.list[currentIdx].id,\r\n                bcname,\r\n                num:qty,\r\n            });\r\n            if(res.code === 200){\r\n                console.log(\"addcarRes=\",res);\r\n                Toast.info('加入购物车成功',2);\r\n            }\r\n        }else{\r\n            changeShow(false);\r\n            showLogin(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"cartMask\"\r\n        onClick = {(e)=>{\r\n            if(['cartMask','closeBtn','cancel'].includes(e.target.className)){\r\n                changeShow(false);\r\n            };\r\n        }}>\r\n            <div className=\"mask-con\" ref={myref}>\r\n                <ul>\r\n                    <li className=\"contentDesc\">\r\n                        <img src={showData.img} alt=\"\"/>\r\n                        <div className=\"disc\">\r\n                            <h5>{showData.name}</h5>\r\n                            <p>{showData.french}</p>\r\n                            <h5>￥{showData.list[currentIdx].pprice}</h5>\r\n                        </div>\r\n                        <span className=\"closeBtn\">✕</span>\r\n                    </li>\r\n                    <li className=\"specification choose\">\r\n                        <h4>规格选择</h4>\r\n                        <div className=\"chooseSpecify\">\r\n                            <span\r\n                            onClick={()=>{\r\n                                changeMenu(!weightMenu)\r\n                            }}>\r\n                                {currentweight}∨\r\n                            </span>\r\n                            {\r\n                                weightMenu?\r\n                                (<ul className=\"chooseWeight\">\r\n                                {\r\n                                    showData.list.map((item,index)=>(\r\n                                        <li key={item.id}\r\n                                        className={index===currentIdx?\"activeWeight\":''}\r\n                                        onClick={\r\n                                            changeWeightFn.bind(null,item,index)\r\n                                        }\r\n                                        >\r\n                                            {item.spec}（{item.weight}）  - {item.edible}\r\n                                        </li>\r\n                                    ))\r\n                                }\r\n                                </ul>):'' \r\n                            }\r\n                        </div>\r\n                    </li>\r\n                    <li  className=\"number choose\">\r\n                        <h4>数量选择</h4>\r\n                        <div className=\"chooseQty\">\r\n                            <input type=\"button\" value=\"-\"\r\n                            onClick={()=>{\r\n                                if(qty>1)changeQty(qty-1);\r\n                            }} />\r\n                            <input type=\"text\" id=\"\" value={qty}\r\n                            onChange={(e)=>{\r\n                                changeQty(e.currentTarget.value);\r\n                            }}/>\r\n                            <input type=\"button\" value=\"+\"\r\n                            onClick={()=>{\r\n                                changeQty(qty+1);\r\n                            }}/>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className=\"sureBtn\">\r\n                    <button className=\"cancel\">取消</button>\r\n                    <button className=\"sure\"\r\n                    onClick={\r\n                        sureAddCar\r\n                    }\r\n                    >确定</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartMask;",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":2,"column":24,"nodeType":"177","messageId":"178","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"180","line":65,"column":49,"nodeType":"181","messageId":"182","endLine":65,"endColumn":82,"fix":"183"},{"ruleId":"184","severity":1,"message":"185","line":73,"column":1,"nodeType":"177","messageId":"186","endLine":73,"endColumn":4},{"ruleId":"171","replacedBy":"187"},{"ruleId":"173","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":40,"column":15,"nodeType":"191","endLine":52,"endColumn":6},{"ruleId":"189","severity":1,"message":"192","line":52,"column":7,"nodeType":"193","endLine":52,"endColumn":9,"suggestions":"194"},{"ruleId":"189","severity":1,"message":"195","line":72,"column":7,"nodeType":"193","endLine":72,"endColumn":19,"suggestions":"196"},{"ruleId":"189","severity":1,"message":"197","line":115,"column":7,"nodeType":"193","endLine":115,"endColumn":20,"suggestions":"198"},{"ruleId":"189","severity":1,"message":"199","line":136,"column":7,"nodeType":"193","endLine":136,"endColumn":20,"suggestions":"200"},{"ruleId":"189","severity":1,"message":"190","line":12,"column":15,"nodeType":"201","endLine":22,"endColumn":6},{"ruleId":"189","severity":1,"message":"202","line":22,"column":7,"nodeType":"193","endLine":22,"endColumn":13,"suggestions":"203"},{"ruleId":"189","severity":1,"message":"190","line":12,"column":15,"nodeType":"201","endLine":24,"endColumn":6},{"ruleId":"189","severity":1,"message":"204","line":24,"column":7,"nodeType":"193","endLine":24,"endColumn":13,"suggestions":"205"},{"ruleId":"175","severity":1,"message":"206","line":11,"column":21,"nodeType":"177","messageId":"178","endLine":11,"endColumn":28},{"ruleId":"175","severity":1,"message":"207","line":55,"column":11,"nodeType":"177","messageId":"178","endLine":55,"endColumn":22},{"ruleId":"208","severity":1,"message":"209","line":76,"column":71,"nodeType":"210","messageId":"211","endLine":76,"endColumn":73},{"ruleId":"189","severity":1,"message":"212","line":86,"column":7,"nodeType":"193","endLine":86,"endColumn":17,"suggestions":"213"},{"ruleId":"189","severity":1,"message":"214","line":101,"column":7,"nodeType":"193","endLine":101,"endColumn":27,"suggestions":"215"},{"ruleId":"189","severity":1,"message":"216","line":113,"column":24,"nodeType":"217","endLine":113,"endColumn":33},{"ruleId":"218","severity":1,"message":"219","line":142,"column":44,"nodeType":"220","endLine":142,"endColumn":65},{"ruleId":"221","severity":1,"message":"222","line":155,"column":79,"nodeType":"191","messageId":"223","endLine":155,"endColumn":81},{"ruleId":"189","severity":1,"message":"224","line":27,"column":7,"nodeType":"193","endLine":27,"endColumn":16,"suggestions":"225"},{"ruleId":"189","severity":1,"message":"226","line":60,"column":7,"nodeType":"193","endLine":60,"endColumn":22,"suggestions":"227"},{"ruleId":"189","severity":1,"message":"228","line":32,"column":7,"nodeType":"193","endLine":32,"endColumn":13,"suggestions":"229"},{"ruleId":"189","severity":1,"message":"230","line":47,"column":7,"nodeType":"193","endLine":47,"endColumn":12,"suggestions":"231"},{"ruleId":"189","severity":1,"message":"232","line":86,"column":7,"nodeType":"193","endLine":86,"endColumn":36,"suggestions":"233"},{"ruleId":"218","severity":1,"message":"219","line":66,"column":21,"nodeType":"220","endLine":66,"endColumn":39},{"ruleId":"218","severity":1,"message":"219","line":67,"column":21,"nodeType":"220","endLine":67,"endColumn":71},{"ruleId":"218","severity":1,"message":"219","line":68,"column":21,"nodeType":"220","endLine":68,"endColumn":39},{"ruleId":"218","severity":1,"message":"219","line":69,"column":21,"nodeType":"220","endLine":69,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":14,"column":15,"nodeType":"201","endLine":30,"endColumn":6},{"ruleId":"184","severity":1,"message":"234","line":68,"column":1,"nodeType":"177","messageId":"186","endLine":68,"endColumn":9},{"ruleId":"175","severity":1,"message":"235","line":20,"column":22,"nodeType":"177","messageId":"178","endLine":20,"endColumn":33},{"ruleId":"175","severity":1,"message":"236","line":23,"column":22,"nodeType":"177","messageId":"178","endLine":23,"endColumn":33},{"ruleId":"184","severity":1,"message":"237","line":119,"column":1,"nodeType":"177","messageId":"186","endLine":119,"endColumn":9},{"ruleId":"184","severity":1,"message":"238","line":36,"column":1,"nodeType":"177","messageId":"186","endLine":36,"endColumn":6},{"ruleId":"208","severity":1,"message":"239","line":23,"column":17,"nodeType":"210","messageId":"211","endLine":23,"endColumn":19},{"ruleId":"189","severity":1,"message":"240","line":28,"column":7,"nodeType":"193","endLine":28,"endColumn":9,"suggestions":"241"},{"ruleId":"189","severity":1,"message":"242","line":36,"column":7,"nodeType":"193","endLine":36,"endColumn":9,"suggestions":"243"},{"ruleId":"218","severity":1,"message":"219","line":21,"column":29,"nodeType":"220","endLine":21,"endColumn":70},{"ruleId":"189","severity":1,"message":"244","line":53,"column":7,"nodeType":"193","endLine":53,"endColumn":19,"suggestions":"245"},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property includes.","MemberExpression","unexpectedWhitespace",{"range":"248","text":"249"},"no-func-assign","'App' is a function.","isAFunction",["246"],["247"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.","ArrayExpression",["250"],"React Hook useCallback has an unnecessary dependency: 'currentSku'. Either exclude it or remove the dependency array.",["251"],"React Hook useCallback has missing dependencies: 'bcname', 'id', 'num', and 'user'. Either include them or remove the dependency array.",["252"],"React Hook useCallback has missing dependencies: 'bcname', 'id', 'num', and 'props.history'. Either include them or remove the dependency array.",["253"],"FunctionExpression","React Hook useEffect has missing dependencies: 'cakeData' and 'changeIsok'. Either include them or remove the dependency array. You can also do a functional update 'changeCake(c => ...)' if you only need 'cakeData' in the 'changeCake' call.",["254"],"React Hook useEffect has missing dependencies: 'changeIsok' and 'snackData'. Either include them or remove the dependency array. You can also do a functional update 'changeSnack(s => ...)' if you only need 'snackData' in the 'changeSnack' call.",["255"],"'setName' is assigned a value but never used.","'recommendFn' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useCallback has a missing dependency: 'username'. Either include it or remove the dependency array.",["256"],"React Hook useCallback has an unnecessary dependency: 'allCheck'. Either exclude it or remove the dependency array.",["257"],"Assignments to the 'allCheck' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","UnaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useCallback has an unnecessary dependency: 'svgCode'. Either exclude it or remove the dependency array.",["258"],"React Hook useCallback has missing dependencies: 'props.history' and 'props.location.search'. Either include them or remove the dependency array.",["259"],"React Hook useEffect has missing dependencies: 'length' and 'regName'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has a missing dependency: 'regPsw'. Either include it or remove the dependency array.",["261"],"React Hook useCallback has missing dependencies: 'length', 'props.history', 'props.location.search', 'regName', 'regPsw', 'regTel', and 'shaPsw'. Either include them or remove the dependency array.",["262"],"'FloorCon' is a function.","'changeTaste' is assigned a value but never used.","'changeScene' is assigned a value but never used.","'Handpick' is a function.","'Floor' is a function.","Expected '===' and instead saw '=='.","React Hook useCallback has missing dependencies: 'history', 'location.pathname', 'location.search', and 'showMask'. Either include them or remove the dependency array.",["263"],"React Hook useCallback has missing dependencies: 'history', 'location.pathname', and 'showMask'. Either include them or remove the dependency array.",["264"],"React Hook useCallback has an unnecessary dependency: 'currentIdx'. Either exclude it or remove the dependency array.",["265"],"no-global-assign","no-unsafe-negation",[2192,2194],".",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"268","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"268","fix":"295"},"Update the dependencies array to be: [props.location.search]",{"range":"296","text":"297"},"Update the dependencies array to be: []",{"range":"298","text":"299"},"Update the dependencies array to be: [user, id, size.id, bcname, num]",{"range":"300","text":"301"},"Update the dependencies array to be: [num, id, size.id, bcname, props.history]",{"range":"302","text":"303"},"Update the dependencies array to be: [cakeData, changeIsok, page]",{"range":"304","text":"305"},"Update the dependencies array to be: [changeIsok, page, snackData]",{"range":"306","text":"307"},"Update the dependencies array to be: [username]",{"range":"308","text":"309"},"Update the dependencies array to be: [checklist]",{"range":"310","text":"311"},{"range":"312","text":"299"},"Update the dependencies array to be: [code, name, psw, props.location.search, props.history]",{"range":"313","text":"314"},"Update the dependencies array to be: [length, name, regName]",{"range":"315","text":"316"},"Update the dependencies array to be: [psw, regPsw]",{"range":"317","text":"318"},"Update the dependencies array to be: [regName, length, regTel, tel, regPsw, psw, shaPsw, againPsw, agree, name, props.history, props.location.search]",{"range":"319","text":"320"},"Update the dependencies array to be: [history, location.pathname, location.search, showMask]",{"range":"321","text":"322"},"Update the dependencies array to be: [history, location.pathname, showMask]",{"range":"323","text":"324"},{"range":"325","text":"299"},[2237,2239],"[props.location.search]",[2796,2808],"[]",[4078,4091],"[user, id, size.id, bcname, num]",[4783,4796],"[num, id, size.id, bcname, props.history]",[660,666],"[cakeData, changeIsok, page]",[772,778],"[changeIsok, page, snackData]",[2867,2877],"[username]",[3412,3432],"[checklist]",[833,842],[1846,1861],"[code, name, psw, props.location.search, props.history]",[1039,1045],"[length, name, regName]",[1432,1437],"[psw, regPsw]",[2707,2736],"[regName, length, regTel, tel, regPsw, psw, shaPsw, againPsw, agree, name, props.history, props.location.search]",[812,814],"[history, location.pathname, location.search, showMask]",[1019,1021],"[history, location.pathname, showMask]",[1604,1616]]